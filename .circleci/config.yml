version: 2.1
sites: &sites
  site:
    - site-1
    - site-2
    - site-3
    - site-4
    - site-5
    - site-6
    - site-7
    - site-8
    - site-9
    - site-10
    - site-11
    - site-12
    - site-13
    - site-14
    - site-15
    - site-16
    - site-17
    - site-18
    - site-19
    - site-20
    - site-21
    - site-22
    - site-23
    - site-24
    - site-25
    - site-26
    - site-27
    - site-28
    - site-29
    - site-30
    - site-31
    - site-32
    - site-33
    - site-34
    - site-35
    - site-36
    - site-37
    - site-38
    - site-39
    - site-40
    - site-41
    - site-42
    - site-43
    - site-44
    - site-45
    - site-46
    - site-47
    - site-48
    - site-49
    - site-50
    - site-51
    - site-52
    - site-53
    - site-54
    - site-55
    - site-56
    - site-57
    - site-58
    - site-59
    - site-60
    - site-61
    - site-62
    - site-63
    - site-64
    - site-65
    - site-66
    - site-67
    - site-68
    - site-69
    - site-70
    - site-71
    - site-72
    - site-73
    - site-74
    - site-75
    - site-76
    - site-77
    - site-78
    - site-79
    - site-80
    - site-81
    - site-82
    - site-83
    - site-84
    - site-85
    - site-86
    - site-87
    - site-88
    - site-89
    - site-90
    - site-91
    - site-92
    - site-93
    - site-94
    - site-95
    - site-96
    - site-97
    - site-98
    - site-99
    - site-100

executors:

  general:
    docker:
      - image: cimg/base:2025.10
    resource_class: small

  php:
    docker:
      - image: cimg/php:8.4
    resource_class: small

jobs:
  setup-deployment-env:
    executor: php

    steps:
      - run:
          name: Setup deployment environment
          command: echo "This is where we would setup the environment needed to deploy."

      - run:
          name: Slack notification
          command: echo "Send slack notification if there's an error."

      # Persist data for use later on
      - persist_to_workspace:
          root: ~/
          paths:
            - project/vendor

  deploy-to-test:
    executor: php

    parameters:
      site:
        type: string

    steps:
      # Retrieve persisted data
      - attach_workspace:
          at: ~/

      - run: 
          name: "Deploy to Test"
          command: echo "Run any scripts or commands needed to deploy to Test for " << parameters.site >> "."

      - run:
          name: Slack notification
          command: echo "Send slack notification if there's an error."

  backup-live-db:
    executor: php

    parameters:
      site:
        type: string

    steps:
      # Retrieve persisted data
      - attach_workspace:
          at: ~/

      - run: 
          name: "Backup Live database"
          command: echo "Back up live database for " << parameters.site >> "."
      
      - run:
          name: Slack notification
          command: echo "Send slack notification if there's an error."
  
  deploy-to-live:
    executor: php

    parameters:
      site:
        type: string

    steps:
      # Retrieve persisted data
      - attach_workspace:
          at: ~/

      - run: 
          name: "Deploy to Live"
          command: echo "Run any scripts or commands needed to deploy to Live for " << parameters.site >> "."
      
      - run:
          name: Slack notification
          command: echo "Send slack notification if there's an error."

  purge-all-caches:
    executor: general

    steps:
      - run:
          name: "Purge all caches"
          command: echo "Run any scripts or commands needed to purge all caches."

      - run:
          name: Slack notification
          command: echo "Send slack notification if there's an error."

workflows:
  deploy:
    jobs:
      - setup-deployment-env:
          filters:
            branches:
              only: master
      - deploy-to-test:
          matrix:
            parameters: 
              <<: *sites
            name: deploy-to-test-<< matrix.site >>
          requires:
            - setup-deployment-env
          filters:
            branches:
              only: master
      - manual-approval:
          type: approval
          requires:
            - deploy-to-test
          filters:
            branches:
              only: master
      - backup-live-db:
          matrix:
            parameters: 
              <<: *sites
            name: backup-live-db-<< matrix.site >>
          requires:
            - manual-approval
          filters:
            branches:
              only: master
      - deploy-to-live:
          matrix:
            parameters:
              <<: *sites
            name: deploy-to-live-<< matrix.site >>
          requires:
            - backup-live-db-<< matrix.site >>
          filters:
            branches:
              only: master
      - purge-all-caches:
          requires:
            - deploy-to-live
          filters:
            branches:
              only: master
